/**
 * 工厂方法模式 - 简单工厂模式：
 * 		简单工厂模式就是由一个工厂类根据传入的参数决定创建哪一种的产品类
 * 适用场景：
 * 		适用于业务逻辑比较简单的情景
 *
 * 工厂方法模式：
 *		工厂方法模式是简单工厂模式的加强版,解决了简单工厂模式的一些缺点,比如"开闭原则",它不需要修改原来的代码,只需要添加
 *		新的代码就可以了,它的层次结构更加复杂
 * 适用场景：
 * 		比较复杂的场景，比如工厂生产的对象可能会有新增，或删除
 * 实现原理：
 *		对简单工厂模式进行了抽象,抽象类 Factory 将不再负责具体的生产,只是制定一些规则,具体的生产由继承了它的具体工厂类去
 *		做,这个时候,其实就是一个具体的对象对应一个具体的工厂类,一个抽象类对应一个抽象对象类,添加的代码如下,这样的好处是我
 *		们每次增加对象只需要修改对象具体实现类,和具体工厂类这两个类,这样也会有一个缺点就是,逻辑判断放在了客户端,客户端需要
 *		修改代码
 *
 * Created by Demon-Coffee on 2018/1/13 0013.
 */
package com.demon.factoryMethod;